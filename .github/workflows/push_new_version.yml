name: Push New Version

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "The semantic version to assign to the new Tag"
        required: true
        type: string
      dryrun:
        description: "Run the action without pushing anything"
        required: true
        type: boolean
        default: true

defaults:
  run:
    shell: bash

jobs:
  tag_repo:
    name: "Add a Tag to the Repo"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: GitHub Tag
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ github.event.inputs.tag }}
          create_annotated_tag: true
          dry_run: ${{ github.event.inputs.dryrun }}

  build_and_push_image:
    name: "Build the new Image"
    runs-on: ubuntu-latest
    needs:
      - tag_repo
    steps:
      - uses: actions/checkout@v3

      - name: Set Variables
        id: variables
        run: |
          echo "::set-output name=dkimagepath::renegademaster/zomboid-dedicated-server"
          echo "::set-output name=ghimagepath::renegade-master/zomboid-dedicated-server"
          echo "::set-output name=qyimagepath::renegade_master/zomboid-dedicated-server"
          echo "::set-output name=datetime::$(date +%Y%m%dT%H%M%SZ)"

      - name: Login to Image Repositories
        run: |
          docker login -u ${{ secrets.GH_USER }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }} docker.io
          docker login -u ${{ secrets.QUAY_USER }} -p ${{ secrets.QUAY_TOKEN }} quay.io

      - name: Buildah Build
        run: |
          buildah bud \
          --file docker/zomboid-dedicated-server.Dockerfile \
          --tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:${{ github.event.inputs.tag }} \
          .

      - name: ReTag Image
        run: |
          buildah tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:${{ github.event.inputs.tag }} ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest

          buildah tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest docker.io/${{ steps.variables.outputs.dkimagepath }}:${{ github.event.inputs.tag }}
          buildah tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest quay.io/${{ steps.variables.outputs.qyimagepath }}:${{ github.event.inputs.tag }}

          buildah tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest docker.io/${{ steps.variables.outputs.dkimagepath }}:latest
          buildah tag ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest quay.io/${{ steps.variables.outputs.qyimagepath }}:latest

      - name: Push new Image Tags
        run: |
          if [[ "${{ github.event.inputs.dryrun }}" == "false" ]]; then
            printf "Pushing Image Tags\n"

            buildah push ghcr.io/${{ steps.variables.outputs.ghimagepath }}:${{ github.event.inputs.tag }}
            buildah push ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest

            buildah push docker.io/${{ steps.variables.outputs.dkimagepath }}:${{ github.event.inputs.tag }}
            buildah push docker.io/${{ steps.variables.outputs.dkimagepath }}:latest

            buildah push quay.io/${{ steps.variables.outputs.qyimagepath }}:${{ github.event.inputs.tag }}
            buildah push quay.io/${{ steps.variables.outputs.qyimagepath }}:latest
          else
            printf "DryRun. Not pushing Git Tags. Printing commands...\n"          

            printf "buildah push ghcr.io/${{ steps.variables.outputs.ghimagepath }}:${{ github.event.inputs.tag }}\n"
            printf "buildah push ghcr.io/${{ steps.variables.outputs.ghimagepath }}:latest\n"

            printf "buildah push docker.io/${{ steps.variables.outputs.dkimagepath }}:${{ github.event.inputs.tag }}\n"
            printf "buildah push docker.io/${{ steps.variables.outputs.dkimagepath }}:latest\n"

            printf "buildah push quay.io/${{ steps.variables.outputs.qyimagepath }}:${{ github.event.inputs.tag }}\n"
            printf "buildah push quay.io/${{ steps.variables.outputs.qyimagepath }}:latest\n"
          fi
